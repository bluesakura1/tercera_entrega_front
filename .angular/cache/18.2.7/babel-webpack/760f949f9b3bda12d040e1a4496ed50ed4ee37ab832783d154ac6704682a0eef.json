{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ReviewService = /*#__PURE__*/(() => {\n  class ReviewService {\n    http;\n    apiUrl = 'http://localhost:3000/api/reviews';\n    constructor(http) {\n      this.http = http;\n    }\n    // Método para agregar una nueva reseña\n    addReview(reviewData) {\n      return this.http.post(`${this.apiUrl}/dejar-valoracion`, reviewData);\n    }\n    // Método para obtener todas las reseñas de una propiedad\n    getReviewsByProperty(propertyId) {\n      return this.http.get(`${this.apiUrl}/ver-valoraciones?propertyId=${propertyId}`);\n    }\n    static ɵfac = function ReviewService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ReviewService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ReviewService,\n      factory: ReviewService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ReviewService;\n})();","map":{"version":3,"names":["ReviewService","http","apiUrl","constructor","addReview","reviewData","post","getReviewsByProperty","propertyId","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Nereida Ramos\\Downloads\\tercera_entrega_front\\src\\app\\services\\supabase\\review.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Review {\r\n  userId: number;  \r\n  listingId: string;  \r\n  rating: number;\r\n  comment: string;\r\n  createdAt: Date;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReviewService {\r\n\r\n  private apiUrl = 'http://localhost:3000/api/reviews';  \r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Método para agregar una nueva reseña\r\n  addReview(reviewData: Review): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/dejar-valoracion`, reviewData);\r\n  }\r\n\r\n  // Método para obtener todas las reseñas de una propiedad\r\n  getReviewsByProperty(propertyId: string): Observable<Review[]> {\r\n    return this.http.get<Review[]>(`${this.apiUrl}/ver-valoraciones?propertyId=${propertyId}`);\r\n  }\r\n}\r\n"],"mappings":";;AAeA,WAAaA,aAAa;EAApB,MAAOA,aAAa;IAIJC,IAAA;IAFZC,MAAM,GAAG,mCAAmC;IAEpDC,YAAoBF,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;IAAe;IAEvC;IACAG,SAASA,CAACC,UAAkB;MAC1B,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,GAAG,IAAI,CAACJ,MAAM,mBAAmB,EAAEG,UAAU,CAAC;IACtE;IAEA;IACAE,oBAAoBA,CAACC,UAAkB;MACrC,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAW,GAAG,IAAI,CAACP,MAAM,gCAAgCM,UAAU,EAAE,CAAC;IAC5F;;uCAdWR,aAAa,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;;aAAbb,aAAa;MAAAc,OAAA,EAAbd,aAAa,CAAAe,IAAA;MAAAC,UAAA,EAFZ;IAAM;;SAEPhB,aAAa;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}