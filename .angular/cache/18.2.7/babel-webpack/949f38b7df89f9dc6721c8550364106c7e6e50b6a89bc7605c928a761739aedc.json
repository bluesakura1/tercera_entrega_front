{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nlet BookingComponent = class BookingComponent {\n  fb;\n  bookingService;\n  route;\n  router;\n  booking = [];\n  actualuser = JSON.parse(localStorage.getItem('user'));\n  bookingForm;\n  propertyId = '';\n  constructor(fb, bookingService, route, router) {\n    this.fb = fb;\n    this.bookingService = bookingService;\n    this.route = route;\n    this.router = router;\n    // Definir el formulario con los controles necesarios\n    this.bookingForm = this.fb.group({\n      listingId: ['', [Validators.required, Validators.pattern(/^\\d+$/)]],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      totalPrice: ['', [Validators.required, Validators.min(0)]]\n    });\n  }\n  ngOnInit() {\n    // Obtener el ID de la propiedad desde la URL\n    this.propertyId = this.route.snapshot.paramMap.get('id') || '';\n  }\n  // Método para realizar la reserva\n  onSubmit() {\n    if (this.bookingForm.valid) {\n      // Obtener las fechas como cadenas en formato YYYY-MM-DD\n      const startDate = this.bookingForm.value.startDate;\n      const endDate = this.bookingForm.value.endDate;\n      // Validar que las fechas no sean inválidas\n      if (!startDate || !endDate) {\n        console.error('Las fechas de inicio o fin son inválidas');\n        return;\n      }\n      //aqui establecmos un precio pr defecto para proba\n      const totalPrice = this.bookingForm.value.totalPrice || 56437;\n      // Obtener el user_id del localStorage (asegúrate que el usuario esté autenticado)\n      const currentUser = JSON.parse(localStorage.getItem('user') || '{}');\n      const userId = currentUser?.user_id;\n      // Validar que se obtuvo el user_id\n      if (!userId) {\n        console.error('No se pudo obtener el user_id del usuario');\n        return;\n      }\n      // Preparar los datos de la reserva, asegurándose de que las fechas estén en formato correcto\n      const bookingData = {\n        listing_id: parseInt(this.bookingForm.value.listingId, 10),\n        user_id: userId,\n        start_date: startDate,\n        end_date: endDate,\n        total_price: totalPrice\n      };\n      // Llamar al servicio para realizar la reserva\n      this.bookingService.realizarReserva(bookingData).subscribe(response => {\n        console.log('Reserva realizada con éxito', response);\n        this.router.navigate(['/property-list']);\n      }, error => {\n        console.error('Error al realizar la reserva', error);\n        if (error.error && error.error.message) {\n          console.error('Errores específicos:', error.error.message);\n        }\n      });\n    } else {\n      console.error('Formulario inválido');\n    }\n  }\n  // Método para cancelar una reserva\n  cancelarReserva(bookingId) {\n    this.bookingService.cancelarReserva(bookingId).subscribe(response => {\n      console.log('Reserva cancelada', response);\n    }, error => {\n      console.error('Error al cancelar la reserva', error);\n    });\n  }\n  submitget() {\n    this.bookingService.obtenerReservasBuyer(this.actualuser.user_id).subscribe(response => {\n      console.log('Reserva cancelada', response);\n      this.booking.push(response);\n    }, error => {\n      console.error('Error al cancelar la reserva', error);\n    });\n  }\n  print(reu) {\n    console.log(reu);\n  }\n  ObtenerReserva(bookingId) {\n    console.log(\"w\");\n  }\n};\nBookingComponent = __decorate([Component({\n  selector: 'app-booking',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule, RouterLink],\n  templateUrl: './booking.component.html',\n  styleUrls: ['./booking.component.css']\n})], BookingComponent);\nexport { BookingComponent };","map":{"version":3,"names":["Component","Validators","ReactiveFormsModule","RouterLink","CommonModule","BookingComponent","fb","bookingService","route","router","booking","actualuser","JSON","parse","localStorage","getItem","bookingForm","propertyId","constructor","group","listingId","required","pattern","startDate","endDate","totalPrice","min","ngOnInit","snapshot","paramMap","get","onSubmit","valid","value","console","error","currentUser","userId","user_id","bookingData","listing_id","parseInt","start_date","end_date","total_price","realizarReserva","subscribe","response","log","navigate","message","cancelarReserva","bookingId","submitget","obtenerReservasBuyer","push","print","reu","ObtenerReserva","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\Nereida Ramos\\Downloads\\tercera_entrega_front\\src\\app\\features\\pages\\booking\\booking.component.ts"],"sourcesContent":["  import { Component, OnInit } from '@angular/core';\r\n  import { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\n  import { BookingService } from '../../../services/supabase/booking.service';\r\n  import { ActivatedRoute, Router, RouterLink } from '@angular/router';\r\n  import { CommonModule } from '@angular/common';\r\n  interface user {\r\n    isActive: boolean;\r\n    user_id: number;\r\n    email: string;  \r\n    profile_picture: string;  \r\n    is_owner: boolean;  \r\n    bio: string;  \r\n    created_at: string;  \r\n    updated_at: string;  \r\n    deleted_at: string;  \r\n  }\r\n  interface book {\r\n  Isread: boolean,\r\n  booking_id: number,\r\n  created_at: string,\r\n  deleted_at: string,\r\n  end_date: string,\r\n  start_date: string,\r\n  total_price: number,\r\n  updated_at: string\r\n}\r\n  @Component({\r\n    selector: 'app-booking',\r\n    standalone: true,\r\n    imports: [ReactiveFormsModule, CommonModule,RouterLink],\r\n    templateUrl: './booking.component.html',\r\n    styleUrls: ['./booking.component.css']\r\n  })\r\n  export class BookingComponent implements OnInit {\r\n    booking:any=[]\r\n    actualuser:user|null = JSON.parse(localStorage.getItem('user')!);\r\n\r\n    bookingForm: FormGroup;\r\n    propertyId: string = '';\r\n\r\n    constructor(\r\n      private fb: FormBuilder,\r\n      private bookingService: BookingService,\r\n      private route: ActivatedRoute,\r\n      private router: Router\r\n    ) {\r\n      // Definir el formulario con los controles necesarios\r\n      this.bookingForm = this.fb.group({\r\n        listingId: ['', [Validators.required, Validators.pattern(/^\\d+$/)]],\r\n        startDate: ['', Validators.required],\r\n        endDate: ['', Validators.required],\r\n        totalPrice: ['', [Validators.required, Validators.min(0)]]\r\n      });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      // Obtener el ID de la propiedad desde la URL\r\n      this.propertyId = this.route.snapshot.paramMap.get('id') || '';\r\n    }\r\n\r\n    // Método para realizar la reserva\r\n    onSubmit(): void {\r\n      if (this.bookingForm.valid) {\r\n        // Obtener las fechas como cadenas en formato YYYY-MM-DD\r\n        const startDate = this.bookingForm.value.startDate;\r\n        const endDate = this.bookingForm.value.endDate;\r\n    \r\n        // Validar que las fechas no sean inválidas\r\n        if (!startDate || !endDate) {\r\n          console.error('Las fechas de inicio o fin son inválidas');\r\n          return;\r\n        }\r\n    \r\n        //aqui establecmos un precio pr defecto para proba\r\n        const totalPrice = this.bookingForm.value.totalPrice || 56437;\r\n    \r\n        // Obtener el user_id del localStorage (asegúrate que el usuario esté autenticado)\r\n        const currentUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n        const userId = currentUser?.user_id;\r\n    \r\n        // Validar que se obtuvo el user_id\r\n        if (!userId) {\r\n          console.error('No se pudo obtener el user_id del usuario');\r\n          return;\r\n        }\r\n\r\n        // Preparar los datos de la reserva, asegurándose de que las fechas estén en formato correcto\r\n        const bookingData = {\r\n          listing_id: parseInt(this.bookingForm.value.listingId, 10),\r\n          user_id: userId,  \r\n          start_date: startDate,  \r\n          end_date: endDate,  \r\n          total_price: totalPrice\r\n        };\r\n    \r\n        // Llamar al servicio para realizar la reserva\r\n        this.bookingService.realizarReserva(bookingData).subscribe(response => {\r\n          console.log('Reserva realizada con éxito', response);\r\n          this.router.navigate(['/property-list']);  \r\n        }, error => {\r\n          console.error('Error al realizar la reserva', error);\r\n          if (error.error && error.error.message) {\r\n            console.error('Errores específicos:', error.error.message);\r\n          }\r\n        });\r\n      } else {\r\n        console.error('Formulario inválido');\r\n      }\r\n    }\r\n\r\n    // Método para cancelar una reserva\r\n    cancelarReserva(bookingId: number): void {\r\n      this.bookingService.cancelarReserva(bookingId).subscribe(response => {\r\n        console.log('Reserva cancelada', response);\r\n        \r\n      }, error => {\r\n        console.error('Error al cancelar la reserva', error);\r\n      });\r\n    }\r\n  submitget(){\r\n    this.bookingService.obtenerReservasBuyer(this.actualuser!.user_id).subscribe(response => {\r\n      console.log('Reserva cancelada', response);\r\n      this.booking.push(response)\r\n      \r\n    }, error => {\r\n      console.error('Error al cancelar la reserva', error);\r\n    });\r\n}\r\nprint(reu:any){\r\n  console.log(reu);\r\n  \r\n}\r\n  ObtenerReserva(bookingId: string): void {\r\n      console.log(\"w\");\r\n\r\n    }\r\n  }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}