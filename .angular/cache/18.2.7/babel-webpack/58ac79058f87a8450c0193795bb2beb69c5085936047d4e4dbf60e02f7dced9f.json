{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Nereida Ramos/Downloads/tercera_entrega_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createClient } from '@supabase/supabase-js';\nimport * as i0 from \"@angular/core\";\nexport let SupabaseService = /*#__PURE__*/(() => {\n  class SupabaseService {\n    supabaseUrl = 'https://your-supabase-url.supabase.co';\n    supabaseKey = 'your-anon-public-key';\n    supabase = createClient(this.supabaseUrl, this.supabaseKey);\n    constructor() {}\n    // Obtener casas por ID de usuario\n    getCasasByUserId(userId) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const {\n          data,\n          error\n        } = yield _this.supabase.from('casas').select('*').eq('id_usuario', userId);\n        if (error) {\n          throw new Error(error.message);\n        }\n        return data;\n      })();\n    }\n    // Actualizar casa\n    updateCasa(casaId, updatedData) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const {\n          data,\n          error\n        } = yield _this2.supabase.from('casas').update(updatedData).eq('id', casaId);\n        if (error) {\n          throw new Error(error.message);\n        }\n        return data;\n      })();\n    }\n    // Eliminar casa\n    deleteCasa(casaId) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        const {\n          data,\n          error\n        } = yield _this3.supabase.from('casas').delete().eq('id', casaId);\n        if (error) {\n          throw new Error(error.message);\n        }\n        return data;\n      })();\n    }\n    // Crear un nuevo usuario\n    createUser(username, password) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        const {\n          data,\n          error\n        } = yield _this4.supabase.from('usuarios').insert([{\n          username,\n          password\n        }]);\n        if (error) {\n          throw new Error(error.message);\n        }\n        return data;\n      })();\n    }\n    // Autenticar usuario (asegúrate de manejar el hashing)\n    authenticateUser(username, password) {\n      var _this5 = this;\n      return _asyncToGenerator(function* () {\n        const {\n          data,\n          error\n        } = yield _this5.supabase.from('usuarios').select('*').eq('username', username).eq('password', password); // Asegúrate de usar un hash en producción\n        if (error) {\n          throw new Error(error.message);\n        }\n        return data;\n      })();\n    }\n    static ɵfac = function SupabaseService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SupabaseService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SupabaseService,\n      factory: SupabaseService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return SupabaseService;\n})();","map":{"version":3,"names":["createClient","SupabaseService","supabaseUrl","supabaseKey","supabase","constructor","getCasasByUserId","userId","_this","_asyncToGenerator","data","error","from","select","eq","Error","message","updateCasa","casaId","updatedData","_this2","update","deleteCasa","_this3","delete","createUser","username","password","_this4","insert","authenticateUser","_this5","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Nereida Ramos\\Downloads\\tercera_entrega_front\\src\\app\\services\\supabase\\supabase.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SupabaseService {\r\n  private supabaseUrl = 'https://your-supabase-url.supabase.co';\r\n  private supabaseKey = 'your-anon-public-key';\r\n  private supabase = createClient(this.supabaseUrl, this.supabaseKey);\r\n\r\n  constructor() { }\r\n\r\n  // Obtener casas por ID de usuario\r\n  async getCasasByUserId(userId: number) {\r\n    const { data, error } = await this.supabase\r\n      .from('casas')\r\n      .select('*')\r\n      .eq('id_usuario', userId);\r\n\r\n    if (error) {\r\n      throw new Error(error.message);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  // Actualizar casa\r\n  async updateCasa(casaId: number, updatedData: any) {\r\n    const { data, error } = await this.supabase\r\n      .from('casas')\r\n      .update(updatedData)\r\n      .eq('id', casaId);\r\n\r\n    if (error) {\r\n      throw new Error(error.message);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  // Eliminar casa\r\n  async deleteCasa(casaId: number) {\r\n    const { data, error } = await this.supabase\r\n      .from('casas')\r\n      .delete()\r\n      .eq('id', casaId);\r\n\r\n    if (error) {\r\n      throw new Error(error.message);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  // Crear un nuevo usuario\r\n  async createUser(username: string, password: string) {\r\n    const { data, error } = await this.supabase\r\n      .from('usuarios')\r\n      .insert([{ username, password }]);\r\n\r\n    if (error) {\r\n      throw new Error(error.message);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  // Autenticar usuario (asegúrate de manejar el hashing)\r\n  async authenticateUser(username: string, password: string) {\r\n    const { data, error } = await this.supabase\r\n      .from('usuarios')\r\n      .select('*')\r\n      .eq('username', username)\r\n      .eq('password', password); // Asegúrate de usar un hash en producción\r\n\r\n    if (error) {\r\n      throw new Error(error.message);\r\n    }\r\n\r\n    return data;\r\n  }\r\n}\r\n"],"mappings":";AACA,SAASA,YAAY,QAAQ,uBAAuB;;AAKpD,WAAaC,eAAe;EAAtB,MAAOA,eAAe;IAClBC,WAAW,GAAG,uCAAuC;IACrDC,WAAW,GAAG,sBAAsB;IACpCC,QAAQ,GAAGJ,YAAY,CAAC,IAAI,CAACE,WAAW,EAAE,IAAI,CAACC,WAAW,CAAC;IAEnEE,YAAA,GAAgB;IAEhB;IACMC,gBAAgBA,CAACC,MAAc;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA;QACnC,MAAM;UAAEC,IAAI;UAAEC;QAAK,CAAE,SAASH,KAAI,CAACJ,QAAQ,CACxCQ,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,YAAY,EAAEP,MAAM,CAAC;QAE3B,IAAII,KAAK,EAAE;UACT,MAAM,IAAII,KAAK,CAACJ,KAAK,CAACK,OAAO,CAAC;QAChC;QAEA,OAAON,IAAI;MAAC;IACd;IAEA;IACMO,UAAUA,CAACC,MAAc,EAAEC,WAAgB;MAAA,IAAAC,MAAA;MAAA,OAAAX,iBAAA;QAC/C,MAAM;UAAEC,IAAI;UAAEC;QAAK,CAAE,SAASS,MAAI,CAAChB,QAAQ,CACxCQ,IAAI,CAAC,OAAO,CAAC,CACbS,MAAM,CAACF,WAAW,CAAC,CACnBL,EAAE,CAAC,IAAI,EAAEI,MAAM,CAAC;QAEnB,IAAIP,KAAK,EAAE;UACT,MAAM,IAAII,KAAK,CAACJ,KAAK,CAACK,OAAO,CAAC;QAChC;QAEA,OAAON,IAAI;MAAC;IACd;IAEA;IACMY,UAAUA,CAACJ,MAAc;MAAA,IAAAK,MAAA;MAAA,OAAAd,iBAAA;QAC7B,MAAM;UAAEC,IAAI;UAAEC;QAAK,CAAE,SAASY,MAAI,CAACnB,QAAQ,CACxCQ,IAAI,CAAC,OAAO,CAAC,CACbY,MAAM,EAAE,CACRV,EAAE,CAAC,IAAI,EAAEI,MAAM,CAAC;QAEnB,IAAIP,KAAK,EAAE;UACT,MAAM,IAAII,KAAK,CAACJ,KAAK,CAACK,OAAO,CAAC;QAChC;QAEA,OAAON,IAAI;MAAC;IACd;IAEA;IACMe,UAAUA,CAACC,QAAgB,EAAEC,QAAgB;MAAA,IAAAC,MAAA;MAAA,OAAAnB,iBAAA;QACjD,MAAM;UAAEC,IAAI;UAAEC;QAAK,CAAE,SAASiB,MAAI,CAACxB,QAAQ,CACxCQ,IAAI,CAAC,UAAU,CAAC,CAChBiB,MAAM,CAAC,CAAC;UAAEH,QAAQ;UAAEC;QAAQ,CAAE,CAAC,CAAC;QAEnC,IAAIhB,KAAK,EAAE;UACT,MAAM,IAAII,KAAK,CAACJ,KAAK,CAACK,OAAO,CAAC;QAChC;QAEA,OAAON,IAAI;MAAC;IACd;IAEA;IACMoB,gBAAgBA,CAACJ,QAAgB,EAAEC,QAAgB;MAAA,IAAAI,MAAA;MAAA,OAAAtB,iBAAA;QACvD,MAAM;UAAEC,IAAI;UAAEC;QAAK,CAAE,SAASoB,MAAI,CAAC3B,QAAQ,CACxCQ,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,UAAU,EAAEY,QAAQ,CAAC,CACxBZ,EAAE,CAAC,UAAU,EAAEa,QAAQ,CAAC,CAAC,CAAC;QAE7B,IAAIhB,KAAK,EAAE;UACT,MAAM,IAAII,KAAK,CAACJ,KAAK,CAACK,OAAO,CAAC;QAChC;QAEA,OAAON,IAAI;MAAC;IACd;;uCA3EWT,eAAe;IAAA;;aAAfA,eAAe;MAAA+B,OAAA,EAAf/B,eAAe,CAAAgC,IAAA;MAAAC,UAAA,EAFd;IAAM;;SAEPjC,eAAe;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}